extend type DocumentRecordSegment {
  """
  The media record this segment is part of.
  """
  mediaRecord: MediaRecord! @resolveTo(
    sourceName: "MediaService",
    sourceTypeName: "Query",
    sourceFieldName: "mediaRecordsByIds",
    keyField: "mediaRecordId",
    keysArg: "ids"
  )
}

extend type VideoRecordSegment {
  """
  The media record this segment is part of.
  """
  mediaRecord: MediaRecord! @resolveTo(
    sourceName: "MediaService",
    sourceTypeName: "Query",
    sourceFieldName: "mediaRecordsByIds",
    keyField: "mediaRecordId",
    keysArg: "ids"
  )
}

extend type MediaRecord {
  """
  Returns the contents this media record is linked to. If the user does not have access to a particular
  content, null will be returned in its place.
  """
  contents: [Content]! @resolveTo(
    sourceName: "ContentService",
    sourceTypeName: "Query",
    sourceFieldName: "findContentsByIds",
    requiredSelectionSet: "{ contentIds }",
    sourceArgs: {
      ids: "{root.contentIds}"
    }
  )

  """
  Returns the segments this media record consists of.
  """
  segments: [MediaRecordSegment!]! @resolveTo(
    sourceName: "DocprocaiService",
    sourceTypeName: "Query",
    sourceFieldName: "_internal_noauth_getMediaRecordSegments",
    requiredSelectionSet: "{ id }",
    sourceArgs: {
      mediaRecordId: "{root.id}"
    }
  )

  """
  Returns a closed captions string formatted in WebVTT format for the media record if it is of type video,
  returns null otherwise.
  """
  closedCaptions: String @resolveTo(
    sourceName: "DocprocaiService",
    sourceTypeName: "Query",
    sourceFieldName: "_internal_noauth_getMediaRecordCaptions",
    requiredSelectionSet: "{ id }",
    sourceArgs: {
      mediaRecordId: "{root.id}"
    }
  )

  """
  The progress of the AI processing of this media record's content.
  """
  aiProcessingProgress: AiEntityProcessingProgress! @resolveTo(
    sourceName: "DocprocaiService",
    sourceTypeName: "Query",
    sourceFieldName: "_internal_noauth_getMediaRecordsAiProcessingProgress",
    keyField: "id",
    keysArg: "mediaRecordIds"
  ) 

  """
  Tags suggested for this media record by the AI system.
  """
  suggestedTags: [String!]! @resolveTo(
    sourceName: "DocprocaiService",
    sourceTypeName: "Query",
    sourceFieldName: "_internal_noauth_getMediaRecordSuggestedTags",
    requiredSelectionSet: "{ id }",
    sourceArgs: {
      mediaRecord: "{root.id}"
    }
  )

  """
  Gets a short summary/overview of the contents of the media record. Returns a list of strings,
  where each string can be treated as a paragraph.
  If no summary is available, returns an empty list.
  """
  summary: [String!]! @resolveTo(
    sourceName: "DocprocaiService",
    sourceTypeName: "Query",
    sourceFieldName: "_internal_noauth_getMediaRecordSummary",
    requiredSelectionSet: "{ id }",
    sourceArgs: {
      mediaRecordId: "{root.id}"
    }
  )
}