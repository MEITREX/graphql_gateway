extend type Section {
  chapter: Chapter! @resolveTo(
    sourceName: "CourseService",
    sourceTypeName: "Query",
    sourceFieldName: "_internal_noauth_chaptersByIds",
    keyField: "chapterId",
    keysArg: "ids"
  )
}

extend type MediaContent {
  """
  The media records linked to this media content.
  """
  mediaRecords: [MediaRecord!]! @resolveTo(
    sourceName: "MediaService",
    sourceTypeName: "Query",
    sourceFieldName: "mediaRecordsByContentIds",
    keyField: "id",
    keysArg: "contentIds"
  )

  segmentLinks: [MediaRecordSegmentLink!]! @resolveTo(
    sourceName: "DocprocaiService",
    sourceTypeName: "Query",
    sourceFieldName: "_internal_noauth_getMediaRecordLinksForContent",
    requiredSelectionSet: "{ id }",
    sourceArgs: {
      contentId: "{root.id}"
    }
  )
}

extend type FlashcardSetAssessment {
  """
  The FlashcardSet of the assessment.
  """
  flashcardSet: FlashcardSet @resolveTo(
    sourceName: "FlashcardService",
    sourceTypeName: "Query",
    sourceFieldName: "findFlashcardSetsByAssessmentIds",
    keyField: "id",
    keysArg: "assessmentIds"
  )
}

extend type FlashcardSet {
  """
  The content this FlashcardSet belongs to.
  """
  content: Content @resolveTo(
    sourceName: "ContentService",
    sourceTypeName: "Query",
    sourceFieldName: "contentsByIds",
    keyField: "assessmentId",
    keysArg: "ids"
  )
}

extend type QuizAssessment {
  """
  The quiz of the assessment.
  If this is null the system is in an inconsistent state and the assessment should be deleted.
  """
  quiz: Quiz @resolveTo(
    sourceName: "QuizService",
    sourceTypeName: "Query",
    sourceFieldName: "findQuizzesByAssessmentIds",
    keyField: "id",
    keysArg: "assessmentIds"
  )
}

extend type Quiz {
  """
  The content this quiz belongs to.
  """
  content: Content @resolveTo(
    sourceName: "ContentService",
    sourceTypeName: "Query",
    sourceFieldName: "contentsByIds",
    keyField: "assessmentId",
    keysArg: "ids"
  )
}

extend type Mutation {
  """
  Creates a new media content and links the given media records to it.
  """
  createMediaContentAndLinkRecords(contentInput: CreateMediaContentInput!, mediaRecordIds: [UUID!]!): MediaContent! # resolved in content.ts

  """
  Creates a new quiz assessment and a new, linked quiz with the given properties.
  """
  createQuizAssessment(assessmentInput: CreateAssessmentInput!, quizInput: CreateQuizInput!): QuizAssessment! # resolved in content.ts
  
  """
  Creates a new flashcard set assessment and a new, linked flashcard set with the given properties.
  """
  createFlashcardSetAssessment(assessmentInput: CreateAssessmentInput!, flashcardSetInput: CreateFlashcardSetInput!): FlashcardSetAssessment # resolved in content.ts
 

}